"""
https://sebest.github.io/post/protips-using-gunicorn-inside-a-docker-image/

The best way to configure a Docker Container is using environment variables, Gunicorn does not natively support this. Gunicorn supports a configuration file that can contain Python code, we will use this feature to be able to pass environment variables to configure it.

We create a file named gunicorn.conf with the following content:

import os

for k,v in os.environ.items():
    if k.startswith("GUNICORN_"):
        key = k.split('_', 1)[1].lower()
        locals()[key] = v
This code will iterate over all environment variables and find those starting by GUNICORN_ and set a local variable with the remaining part, lowercased: GUNICORN_MY_PARAMETER=42 will create a variable named my_parameter with ‘42’ as the value.

We are now able to pass any parameter from this list by prefixing them with GUNICORN_ and uppercasing the parameter name.

Examples:

The number of Gunicorn workers: GUNICORN_WORKERS=5
The backlog: GUNICORN_BACKLOG=4096
We can test it by starting Gunicorn like this:

$ export GUNICORN_WORKERS=2
$ export GUNICORN_BACKLOG=4096
$ export GUNICORN_BIND=0.0.0.0:8080
$ gunicorn --config gunicorn.conf myapp:app
[2015-10-29 11:39:34 +0800] [27229] [INFO] Starting gunicorn 19.3.0
[2015-10-29 11:39:34 +0800] [27229] [INFO] Listening at: http://0.0.0.0:8080 (27229)
[2015-10-29 11:39:34 +0800] [27229] [INFO] Using worker: sync
[2015-10-29 11:39:34 +0800] [27232] [INFO] Booting worker with pid: 27232
[2015-10-29 11:39:34 +0800] [27233] [INFO] Booting worker with pid: 27233
"""

import os

for k,v in os.environ.items():
    if k.startswith("GUNICORN_"):
        key = k.split('_', 1)[1].lower()
        locals()[key] = v